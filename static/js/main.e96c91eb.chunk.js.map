{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchInput","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToogleDone","onToogleImportant","important","classNames","onClick","class","ToDoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","_this$props","filter","onFilterChange","clazz","concat","AddItem","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toogleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_add_item","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.e96c91eb.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n    <header className=\"app-header\">\r\n        <h1>TODOLIST</h1>\r\n        <h2>{toDo} в процессе, {done} сделано</h2>\r\n    </header>\r\n    );\r\n   };\r\n\r\nexport default AppHeader;","import SearchInput from './search-panel';\r\n\r\nexport default SearchInput;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\n\r\nexport default class SearchInput extends Component {\r\n    \r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange =(e)=>{\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n                <input type=\"text\"\r\n                className=\"search-input\" \r\n                placeholder=\"Поиск\"\r\n                onChange={this.onSearchChange}\r\n                value={this.state.term}></input>\r\n        );\r\n    };\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = (props) => {\r\n\r\n        const { label, onDeleted,\r\n                onToogleImportant,\r\n                onToogleDone,\r\n                important, done } = props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        \r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n        <span className={ classNames }>\r\n            <span className=\"todo-list-item-label\" \r\n                onClick={ onToogleDone } >\r\n                { label }\r\n            </span>\r\n            <span class=\"todo-list-item-buttons\">\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm button\"\r\n                        onClick={onToogleDone}>\r\n                        <i className=\"fa fa-check\"/>\r\n                </button>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm button\"\r\n                        onClick={onDeleted}>\r\n                        <i className=\"fa fa-trash-o\"/>\r\n                </button>\r\n            </span>\r\n        </span>\r\n        );\r\n    };\r\n\r\nexport default TodoListItem","import ToDoList from './todo-list';\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nimport ToDoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst ToDoList = ({ todos, onDeleted,\r\n                    onToogleImportant,\r\n                    onToogleDone }) => {\r\n\r\n    const elements = todos.map((item)=> {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n        <li key={id} className=\"list-group-item\">\r\n            <ToDoListItem {...itemProps} \r\n            onDeleted={()=> onDeleted(id)}\r\n            onToogleImportant={()=>onToogleImportant(id)}\r\n            onToogleDone={()=>onToogleDone(id)}/>\r\n        </li>)\r\n    });\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    \r\n    buttons = [\r\n        {name: 'all', label:'Все'},\r\n        {name: 'active', label:'Активно'},\r\n        {name: 'done', label:'Сделано'}\r\n    ];\r\n\r\n    \r\n    \r\n    render () {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label})=>{\r\n            const isActive = filter === name;\r\n            const clazz =isActive ? 'btn-secondary' : 'btn-outline-dark';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn btn-status ${clazz}`}\r\n                        key={name}\r\n                        onClick={()=>onFilterChange(name)}>\r\n                        {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import AddItem from './add-item';\r\n\r\nexport default AddItem;","import React, { Component } from 'react';\r\nimport './add-item.css';\r\n\r\n\r\nexport default class AddItemForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    \r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n           label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label:''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n            <input type=\"text\"\r\n                   className=\"form-control\"\r\n                   onChange={this.onLabelChange}\r\n                   placeholder=\"Что сделать?\"\r\n                   value={this.state.label}/>\r\n                <button className=\"btn btn-outline-dark buttonAdd\">\r\n                Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    };\r\n};\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchInput from '../search-panel';\r\nimport ToDoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport AddItemForm from '../add-item';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    /* create tasks */\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Купить сметану'),\r\n            this.createTodoItem('Сверстать страничку'),\r\n            this.createTodoItem('Поехать к маме'),\r\n            this.createTodoItem('Накормить кота')\r\n        ],\r\n        term: '',\r\n        filter: 'all' //active, all, done\r\n    };\r\n\r\n    /* create tasks */  \r\n    createTodoItem(label){\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n\r\n    /* delete task */\r\n    deleteItem = (id)=> {\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el)=> el.id === id);\r\n\r\n    const newArray = [...todoData.slice(0, idx),\r\n                  ...todoData.slice(idx + 1)];\r\n\r\n\r\n    return {\r\n            todoData: newArray\r\n            } \r\n        });\r\n    };\r\n\r\n    /* create tasks */\r\n    addItem = (text)=> {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData})=>{\r\n\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n    /* array tasks */\r\n    toogleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el)=> el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, \r\n                        [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    /* important tasks */\r\n    onToogleImportant = (id) => {\r\n        this.setState(({todoData})=>{      \r\n            return {\r\n                    todoData: this.toogleProperty(todoData, id, 'important')\r\n                    }; \r\n                });\r\n            };           \r\n\r\n\r\n\r\n    /* done tasks */\r\n    onToogleDone = (id) => {\r\n        this.setState(({todoData})=>{\r\n              \r\n            return {\r\n                     todoData: this.toogleProperty(todoData, id, 'done')\r\n                    } \r\n                });\r\n           };\r\n\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0){\r\n            return items;\r\n        }\r\n        return items.filter((item)=>{\r\n            return item.label.toLowerCase().indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item)=> !item.done);\r\n            case 'done':\r\n                return items.filter((item)=> item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n    /* render elements */       \r\n    render(){\r\n        \r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n        const doneCount = todoData\r\n                          .filter((el)=> el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"container bodyback\">\r\n            <AppHeader toDo={todoCount} done={doneCount}/>\r\n            <SearchInput \r\n            onSearchChange={ this.onSearchChange }/>\r\n            <ItemStatusFilter filter={filter}\r\n                              onFilterChange={this.onFilterChange}/>\r\n            <ToDoList todos={visibleItems}\r\n            onDeleted={ this.deleteItem }\r\n            onToogleImportant={this.onToogleImportant}\r\n            onToogleDone={this.onToogleDone}/>\r\n            <AddItemForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    };  \r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './components/app';\n\n/* render components from app.js in div#root */\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}